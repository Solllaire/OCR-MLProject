import ts from "typescript";
import { getKey } from "../Utils/nodeKey.js";
import { ObjectProperty, ObjectType } from "../Type/ObjectType.js";
export class ObjectLiteralExpressionNodeParser {
    childNodeParser;
    constructor(childNodeParser) {
        this.childNodeParser = childNodeParser;
    }
    supportsNode(node) {
        return node.kind === ts.SyntaxKind.ObjectLiteralExpression;
    }
    createType(node, context) {
        const properties = node.properties.map((t) => new ObjectProperty(t.name.getText(), this.childNodeParser.createType(t.initializer, context), !t.questionToken));
        return new ObjectType(`object-${getKey(node, context)}`, [], properties, false);
    }
}
//# sourceMappingURL=ObjectLiteralExpressionNodeParser.js.map