import { UndefinedType } from "../Type/UndefinedType.js";
import { UnionType } from "../Type/UnionType.js";
import { derefAnnotatedType } from "./derefType.js";
import { preserveAnnotation } from "./preserveAnnotation.js";
export function removeUndefined(propertyType) {
    const types = [];
    let numRemoved = 0;
    for (const type of propertyType.getTypes()) {
        const newType = derefAnnotatedType(type);
        if (newType instanceof UndefinedType) {
            numRemoved++;
        }
        else if (newType instanceof UnionType) {
            const result = removeUndefined(newType);
            numRemoved += result.numRemoved;
            types.push(preserveAnnotation(type, result.newType));
        }
        else {
            types.push(type);
        }
    }
    const newType = types.length == 0 ? new UndefinedType() : types.length == 1 ? types[0] : new UnionType(types);
    return {
        numRemoved,
        newType,
    };
}
//# sourceMappingURL=removeUndefined.js.map