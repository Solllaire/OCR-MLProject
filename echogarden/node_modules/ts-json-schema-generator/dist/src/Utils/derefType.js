import { AliasType } from "../Type/AliasType.js";
import { AnnotatedType } from "../Type/AnnotatedType.js";
import { DefinitionType } from "../Type/DefinitionType.js";
import { HiddenType } from "../Type/HiddenType.js";
import { NeverType } from "../Type/NeverType.js";
import { ReferenceType } from "../Type/ReferenceType.js";
export function derefType(type) {
    if (type instanceof DefinitionType || type instanceof AliasType || type instanceof AnnotatedType) {
        return derefType(type.getType());
    }
    if (type instanceof ReferenceType && type.hasType()) {
        return derefType(type.getType());
    }
    return type;
}
export function derefAnnotatedType(type) {
    if (type instanceof AnnotatedType || type instanceof AliasType) {
        return derefAnnotatedType(type.getType());
    }
    return type;
}
export function isHiddenType(type) {
    if (type instanceof HiddenType || type instanceof NeverType) {
        return true;
    }
    else if (type instanceof DefinitionType || type instanceof AliasType || type instanceof AnnotatedType) {
        return isHiddenType(type.getType());
    }
    return false;
}
export function derefAliasedType(type) {
    if (type instanceof AliasType) {
        return derefAliasedType(type.getType());
    }
    return type;
}
//# sourceMappingURL=derefType.js.map