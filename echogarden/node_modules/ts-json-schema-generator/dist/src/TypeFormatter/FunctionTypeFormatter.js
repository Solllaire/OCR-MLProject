import { FunctionType } from "../Type/FunctionType.js";
export class FunctionTypeFormatter {
    childTypeFormatter;
    functions;
    constructor(childTypeFormatter, functions) {
        this.childTypeFormatter = childTypeFormatter;
        this.functions = functions;
    }
    supportsType(type) {
        return type instanceof FunctionType;
    }
    getDefinition(type) {
        const namedArgs = type.getNamedArguments();
        if (namedArgs) {
            return {
                $comment: type.getComment(),
                type: "object",
                properties: {
                    namedArgs: this.childTypeFormatter.getDefinition(namedArgs),
                },
            };
        }
        return {
            $comment: type.getComment(),
        };
    }
    getChildren(type) {
        const namedArgs = type.getNamedArguments();
        return namedArgs ? this.childTypeFormatter.getChildren(namedArgs) : [];
    }
}
//# sourceMappingURL=FunctionTypeFormatter.js.map