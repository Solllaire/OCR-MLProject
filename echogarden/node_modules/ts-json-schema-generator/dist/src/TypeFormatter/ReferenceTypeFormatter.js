import { DefinitionType } from "../Type/DefinitionType.js";
import { ReferenceType } from "../Type/ReferenceType.js";
export class ReferenceTypeFormatter {
    childTypeFormatter;
    encodeRefs;
    constructor(childTypeFormatter, encodeRefs) {
        this.childTypeFormatter = childTypeFormatter;
        this.encodeRefs = encodeRefs;
    }
    supportsType(type) {
        return type instanceof ReferenceType;
    }
    getDefinition(type) {
        const ref = type.getName();
        return { $ref: `#/definitions/${this.encodeRefs ? encodeURIComponent(ref) : ref}` };
    }
    getChildren(type) {
        const referredType = type.getType();
        if (referredType instanceof DefinitionType) {
            return this.childTypeFormatter.getChildren(referredType);
        }
        return this.childTypeFormatter.getChildren(new DefinitionType(type.getName(), type.getType()));
    }
}
//# sourceMappingURL=ReferenceTypeFormatter.js.map